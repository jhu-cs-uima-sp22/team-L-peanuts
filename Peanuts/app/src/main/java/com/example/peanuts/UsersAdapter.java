package com.example.peanuts;import android.content.Context;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ArrayAdapter;import android.widget.CheckBox;import android.widget.CompoundButton;import android.widget.LinearLayout;import android.widget.TextView;import androidx.annotation.NonNull;import com.google.firebase.database.DataSnapshot;import com.google.firebase.database.DatabaseError;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.FirebaseDatabase;import com.google.firebase.database.ValueEventListener;import java.util.ArrayList;import java.util.List;import java.util.UUID;public class UsersAdapter extends ArrayAdapter<NewAccount.User> {    int resource;    protected String groupId;    private DatabaseReference myRef;    private FirebaseDatabase database;    private List<String> groupRestrictions;    private List<NewAccount.User> members;    private final NewGroup newGroup = new NewGroup();    public UsersAdapter(Context ctx, int res, List<NewAccount.User> users, String uuid) {        super(ctx, res, users);        resource = res;        this.groupId = uuid;    }    @Override    public View getView(int position, View convertView, ViewGroup parent) {        LinearLayout usersView;        NewAccount.User it = getItem(position);        database = FirebaseDatabase.getInstance("https://peanuts-e9a7c-default-rtdb.firebaseio.com/");        myRef = database.getReference("groups");        if (convertView == null) {            usersView = new LinearLayout(getContext());            String inflater = android.content.Context.LAYOUT_INFLATER_SERVICE;            LayoutInflater vi = (LayoutInflater) getContext().getSystemService(inflater);            vi.inflate(resource, usersView, true);        } else {            usersView = (LinearLayout) convertView;        }        TextView userName = (TextView) usersView.findViewById(R.id.user_name);        TextView userEmail = (TextView) usersView.findViewById(R.id.user_email);        CheckBox checkBox = usersView.findViewById(R.id.user_checkbox);        userName.setText(it.getName());        userEmail.setText(it.getEmail());        myRef.child(groupId).addValueEventListener(new ValueEventListener() {            @Override            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {                if (dataSnapshot.getValue() != null) {                    Log.d("retrieve_success", dataSnapshot.toString());                    members = (ArrayList<NewAccount.User>) dataSnapshot.child("members").getValue();                    groupRestrictions = (ArrayList<String>) dataSnapshot.child("restrictions").getValue();                } else {                    members = new ArrayList<>();                    groupRestrictions = new ArrayList<>();                }            }            @Override            public void onCancelled(@NonNull DatabaseError databaseError) {                Log.d("retrieve_fail", databaseError.toString());                members = new ArrayList<>();                groupRestrictions = new ArrayList<>();            }        });        checkBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {            @Override            public void onCheckedChanged(CompoundButton compoundButton, boolean b) {                if (b) {                    members.add(it);                    if (it.restrictions != null) {                        for (String item : it.getRestrictions()) {                            if (!groupRestrictions.contains(item)) {                                groupRestrictions.add(item);                            }                        }                    }                } else {                    members.remove(it);                }                myRef.child(groupId).child("members").setValue(members);                myRef.child(groupId).child("restrictions").setValue(groupRestrictions);            }        });        return usersView;        }    }