package com.example.peanuts;import androidx.annotation.NonNull;import androidx.appcompat.app.AppCompatActivity;import android.content.Context;import android.content.SharedPreferences;import android.os.Bundle;import android.preference.PreferenceManager;import android.util.Log;import android.view.Menu;import android.view.MenuItem;import android.widget.EditText;import android.widget.ListView;import com.google.firebase.database.DataSnapshot;import com.google.firebase.database.DatabaseError;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.FirebaseDatabase;import com.google.firebase.database.Query;import com.google.firebase.database.ValueEventListener;import java.util.ArrayList;import java.util.List;import java.util.UUID;public class NewGroup extends AppCompatActivity {    private DatabaseReference usersDB;    private DatabaseReference groupsDB;    private FirebaseDatabase database;    protected ArrayList<NewAccount.User> users = new ArrayList<>();    protected String uuid;    protected String groupName;    protected String user;    private SharedPreferences preferences;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_new_group);        Log.d("FRAG", "new group activity");        Context context = getApplicationContext();        preferences = PreferenceManager.getDefaultSharedPreferences(context);        this.user = preferences.getString("user_email", "");        database = FirebaseDatabase.getInstance("https://peanuts-e9a7c-default-rtdb.firebaseio.com/");        usersDB = database.getReference("users");        groupsDB = database.getReference("groups");        uuid = String.valueOf(UUID.randomUUID());        Query usersQuery = usersDB.orderByChild("name");        usersQuery.addValueEventListener(new ValueEventListener() {            @Override            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {                Log.d("users_retrieve", dataSnapshot.toString());                for (DataSnapshot userItem: dataSnapshot.getChildren()) {                    Log.d("users_retrieved", userItem.toString());                    String name = (String) userItem.child("name").getValue();                    String email = (String) userItem.child("email").getValue();                    String password = (String) userItem.child("password").getValue();                    ArrayList<String> restrictions = (ArrayList<String>) userItem.child("restrictions").getValue();                    NewAccount.User user = new NewAccount.User(name, email, password, restrictions);                    users.add(user);                    final UsersAdapter adapter = new UsersAdapter(context, R.layout.item_user, users, uuid);                    ListView myList = (ListView) findViewById(R.id.users_list);                    myList.setAdapter(adapter);                    registerForContextMenu(myList);                    // refresh view                    adapter.notifyDataSetChanged();                }            }            @Override            public void onCancelled(@NonNull DatabaseError databaseError) {                Log.d("users_retrieve_error", databaseError.toString());            }        });    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        getMenuInflater().inflate(R.menu.options_menu, menu);        return super.onCreateOptionsMenu(menu);    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        if (item.getItemId() == R.id.action_done) {            groupName = ((EditText) findViewById(R.id.groupName)).getText().toString();            groupsDB.child(uuid).child("name").setValue(groupName);            groupsDB.child(uuid).child("host").setValue(user);            finish();            return true;        } else {            // If we got here, the user's action was not recognized.            // Invoke the superclass to handle it.            return super.onOptionsItemSelected(item);        }    }}